---
# Add a taint to current k3s node, 
# so that kubediag-master and kubediag-agent will not be Schedule to the node
# It is note that Adding a duplicate taint will give an error
- name: Chcking if k3s node has set taint, will skip if alread taint 
  command: kubectl get node {{ ansible_hostname }} -o json 
  register: node_info

# for debug 
- name: debuggg
  debug:
    msg: "{{node_info.stdout|from_json|json_query('spec.taints')}}"

- name: Add a taint to current k3s node
  command: kubectl taint nodes {{ ansible_hostname }} key1=value1:NoSchedule
  when: not node_info.stdout|from_json|json_query('spec.taints')

- name: Getting all namespace information
  command: kubectl get ns -o json
  register: ns_info

# Exist and Active status
- name: Kubediag namespace is already exist and is in Active status
  debug:
    msg: "Kubediag namespace is already exist and is in Active status"
    # msg: "kubediag namespace is already exist"
  when: ns_info.stdout|from_json|json_query('items[?metadata.name == `kubediag`].status.phase') == ["Active"]

# Not exist or kubediag namespace is not active(error status)
- name: Printing message that kubediag namespace is exist and starting to apply
  debug:
    msg: "kubediag namespace is starting to apply"

- name: Creating {{kubediag_namespace}} namespace if not exist
  command: kubectl create namespace {{ kubediag_namespace }}
  when: ns_info.stdout|from_json|json_query('items[?metadata.name==`kubediag`]')==[]
  
- name: Getting all namespace information again
  command: kubectl get ns -o json
  register: ns_info_again

- name: Exiting because of creating kubediag failed
  fail:
    msg: "Exiting because of creating kubediag failed"
  when: ns_info_again.stdout|from_json|json_query('items[?metadata.name==`kubediag`]')==[]

# Sometimes errors occur because of pulling images timeout
# Temporary solution: Retry task 60 times with interval 5s(60*5s = 5min) util all pod is running status
- name: Applying all config/deploy
  command: kubectl apply -f {{ kubediag_deploy_dir }}
  ignore_errors: true

  # Verifying all pods in kubediag namespace is running
- name: Verifying all pod is running status at kubediag namespace
  command: kubectl get pod -n {{ kubediag_namespace }} -o json
  register: all_pod_info_of_kubediag
  retries: 60
  delay: 5
  until: all_pod_info_of_kubediag.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]

- name: Waiting all pods of kubediag namespace arrive reach to running status
  debug: 
    msg: "All pods of kubediag namespace are running"

# TODO: temporarily ignore
# Exist but not in Active status
# - name: KubeDiag namespace is exist but phase is not Active
#   blcok:
#     - name:
#   when: ns_info.stdout|from_json|json_query('items[?metadata.name == `kubediag`].status.phase') != [] and ns_info.stdout|from_json|json_query('items[?metadata.name == `kubediag`].status.phase') != ["Active"]

